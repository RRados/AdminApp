// <auto-generated />
using System;
using AdminApp.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AdminApp.Migrations
{
    [DbContext(typeof(AdministratorContext))]
    [Migration("20230205234023_O")]
    partial class O
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AdminApp.Models.LogIn", b =>
                {
                    b.Property<int>("IdLogin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idLogin");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLogin"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdRoleNavigationIdRole")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.Property<DateTime?>("LoggedIn")
                        .HasColumnType("datetime")
                        .HasColumnName("loggedIn");

                    b.Property<DateTime?>("LoggedOut")
                        .HasColumnType("datetime")
                        .HasColumnName("loggedOut");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.HasKey("IdLogin");

                    b.HasIndex("IdRoleNavigationIdRole");

                    b.HasIndex("IdUser");

                    b.ToTable("LogIn", (string)null);
                });

            modelBuilder.Entity("AdminApp.Models.Role", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date")
                        .HasColumnName("dateCreated");

                    b.Property<DateTime?>("DateDismised")
                        .HasColumnType("date")
                        .HasColumnName("dateDismised");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("roleName");

                    b.HasKey("IdRole");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("AdminApp.Models.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("date")
                        .HasColumnName("dateOfBirth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("firstName");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("userName");

                    b.HasKey("IdUser");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("AdminApp.Models.UserRole", b =>
                {
                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("idRole");

                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("idUser");

                    b.HasKey("IdRole", "IdUser");

                    b.HasIndex("IdUser");

                    b.ToTable("UserRole", (string)null);
                });

            modelBuilder.Entity("AdminApp.Models.LogIn", b =>
                {
                    b.HasOne("AdminApp.Models.Role", "IdRoleNavigation")
                        .WithMany()
                        .HasForeignKey("IdRoleNavigationIdRole");

                    b.HasOne("AdminApp.Models.User", "IdUserNavigation")
                        .WithMany("LogIns")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_LogIn_User");

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AdminApp.Models.UserRole", b =>
                {
                    b.HasOne("AdminApp.Models.Role", "IdRoleNavigation")
                        .WithMany()
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.ClientNoAction)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_Role");

                    b.HasOne("AdminApp.Models.User", "IdUserNavigation")
                        .WithMany()
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UserRole_User");

                    b.Navigation("IdRoleNavigation");

                    b.Navigation("IdUserNavigation");
                });

            modelBuilder.Entity("AdminApp.Models.User", b =>
                {
                    b.Navigation("LogIns");
                });
#pragma warning restore 612, 618
        }
    }
}
